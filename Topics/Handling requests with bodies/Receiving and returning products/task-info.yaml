type: edu
files:
- name: src/task/Main.java
  visible: false
  text: |-
    package task;

    import org.springframework.boot.SpringApplication;
    import org.springframework.boot.autoconfigure.SpringBootApplication;

    @SpringBootApplication
    public class Main {
        public static void main(String[] args) {
            SpringApplication.run(Main.class, args);
        }
    }
  learner_created: false
- name: build.gradle
  visible: false
  text: |-
    plugins {
        id 'java'
        id 'org.springframework.boot' version '2.3.1.RELEASE'
        id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    }

    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
    }

    sourceSets.main.resources.srcDirs = ["resources"]

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }
  learner_created: false
- name: resources/application.properties
  visible: false
  text: |-
    server.port=28852
    management.endpoints.web.exposure.include=*
    management.endpoint.shutdown.enabled=true
  learner_created: false
- name: src/task/Controller.java
  visible: true
  text: |
    package task;

    import org.springframework.web.bind.annotation.*;

    @RestController
    public class Controller {

    }
  learner_created: false
- name: test/Tests.java
  visible: false
  text: |-
    import com.google.gson.Gson;
    import org.hyperskill.hstest.dynamic.DynamicTest;
    import org.hyperskill.hstest.dynamic.input.DynamicTesting;
    import org.hyperskill.hstest.exception.outcomes.WrongAnswer;
    import org.hyperskill.hstest.mocks.web.response.HttpResponse;
    import org.hyperskill.hstest.stage.SpringTest;

    import static org.hyperskill.hstest.testing.expect.json.JsonChecker.*;
    import static org.hyperskill.hstest.testing.expect.Expectation.expect;

    import org.hyperskill.hstest.testcase.CheckResult;
    import task.Main;

    import java.util.Random;

    import static org.hyperskill.hstest.testcase.CheckResult.correct;


    public class Tests extends SpringTest {

        public Tests() {
            super(Main.class);
        }

        static void throwIfIncorrectStatusCode(HttpResponse response, int status) {
            if (response.getStatusCode() != status) {
                throw new WrongAnswer(response.getRequest().getMethod() +
                        " " + response.getRequest().getLocalUri() +
                        " should respond with status code " + status +
                        ", responded: " + response.getStatusCode() + "\n\n" +
                        "Response body:\n" + response.getContent());
            }
        }

        static class Product {
            final String id;
            final String name;
            final String price;

            public Product(String id, String name, String price) {
                this.id = id;
                this.name = name;
                this.price = price;
            }
        }

        final Random rand = new Random();
        final Gson gson = new Gson();

        final Product[] PRODUCTS = new Product[]{
                new Product(Integer.toString(rand.nextInt()), "something " + rand.nextInt(), Integer.toString(rand.nextInt())),
                new Product(Integer.toString(rand.nextInt()), "something " + rand.nextInt(), Integer.toString(rand.nextInt())),
                new Product(Integer.toString( rand.nextInt()), "something " + rand.nextInt(), Integer.toString( rand.nextInt())),
        };

        final String[] JSON_PRODUCTS = new String[]{
                gson.toJson(PRODUCTS[0]),
                gson.toJson(PRODUCTS[1]),
                gson.toJson(PRODUCTS[2]),
        };


        @DynamicTest
        final DynamicTesting[] dt = new DynamicTesting[]{
                () -> testPostProduct(PRODUCTS[0], JSON_PRODUCTS[0]),
                () -> testPostProduct(PRODUCTS[1], JSON_PRODUCTS[1]),
                () -> testPostProduct(PRODUCTS[2], JSON_PRODUCTS[2]),
        };

        CheckResult testPostProduct(Product product, String jsonProduct) {
            HttpResponse response = post("/api/products", jsonProduct).send();

            throwIfIncorrectStatusCode(response, 200);

            expect(response.getContent()).asJson().check(
                    isObject()
                            .value("id", isString(product.id))
                            .value("name", isString(product.name))
                            .value("price", isString(product.price)));

            return correct();
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/learn/step/15217#comment
status: Failed
feedback:
  message: |-
    Wrong answer in test #1

    POST /api/products should respond with status code 200, responded: 400

    Response body:
    {&quot;timestamp&quot;:&quot;2021-12-15T18:09:25.113+00:00&quot;,&quot;status&quot;:400,&quot;error&quot;:&quot;Bad Request&quot;,&quot;message&quot;:&quot;&quot;,&quot;path&quot;:&quot;/api/products&quot;}

    Please find below the output of your program during this failed test.

    ---

    .   ____          _            __ _ _
     /\\ / ___&#39;_ __ _ _(_)_ __  __ _ \ \ \ \
    ( ( )\___ | &#39;_ | &#39;_| | &#39;_ \/ _` | \ \ \ \
     \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
      &#39;  |____| .__|_| |_|_| |_\__, | / / / /
     =========|_|==============|___/=/_/_/_/
     :: Spring Boot ::        (v2.3.1.RELEASE)

    2021-12-15 21:09:19.695  INFO 18996 --- [    Test worker] task.Main                                : Starting Main on aglot with PID 18996 (started by aglot in /home/aglot/IdeaProjects/Recipes/Topics/Handling requests with bodies/Receiving and returning products)
    2021-12-15 21:09:19.704  INFO 18996 --- [    Test worker] task.Main                                : No active profile set, falling back to default profiles: default
    2021-12-15 21:09:22.623  INFO 18996 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 28852 (http)
    2021-12-15 21:09:22.645  INFO 18996 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
    2021-12-15 21:09:22.645  INFO 18996 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.36]
    2021-12-15 21:09:22.802  INFO 18996 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
    2021-12-15 21:09:22.802  INFO 18996 --- [    Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3002 ms
    2021-12-15 21:09:23.377  INFO 18996 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService &#39;applicationTaskExecutor&#39;
    2021-12-15 21:09:23.952  INFO 18996 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path &#39;/actuator&#39;
    2021-12-15 21:09:24.080  INFO 18996 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 28852 (http) with context path &#39;&#39;
    2021-12-15 21:09:24.109  INFO 18996 --- [    Test worker] task.Main                                : Started Main in 5.359 seconds (JVM running for 7.013)
    2021-12-15 21:09:24.870  INFO 18996 --- [io-28852-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet &#39;dispatcherServlet&#39;
    2021-12-15 21:09:24.877  INFO 18996 --- [io-28852-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet &#39;dispatcherServlet&#39;
    2021-12-15 21:09:24.899  INFO 18996 --- [io-28852-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 19 ms
    2021-12-15 21:09:25.058  WARN 18996 --- [io-28852-exec-1] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.util.ArrayList&lt;task.UserInfo&gt;` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.util.ArrayList&lt;task.UserInfo&gt;` out of START_OBJECT token
     at [Source: (PushbackInputStream); line: 1, column: 1]]
  time: Wed, 15 Dec 2021 18:09:25 UTC
record: -1
