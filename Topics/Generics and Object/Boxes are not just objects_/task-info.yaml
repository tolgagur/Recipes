type: code
custom_name: Boxes are not just objects!
files:
- name: src/Main.java
  visible: true
  text: "/**\n\nObject-based box class that requires casting every time you want to\
    \ get some specific stuff from it, e.g.:\n\n    Box cakeBox = new Box();\n   \
    \ cakeBox.put(new Cake());\n    // Without casting only object can be retrieved\
    \ out of the box\n    Cake cake = (Cake) cakeBox.get();\n\nCasting is not desirable\
    \ and can fall at runtime, could you create more... generic solution?\n\n*/\n\
    class Box {\n\n    private Object item;\n\n    public void put(Object item) {\n\
    \    \tthis.item = item;\n    }\n\n    public Object get() {\n        return this.item;\n\
    \    }\n\n}"
  learner_created: false
- name: src/Task.java
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/learn/step/2598#comment
status: Failed
feedback:
  message: |
    Compilation error
    Main.java:91: error: incompatible types: Object cannot be converted to Cake
            Cake cake = cakeBox.get();
                                   ^
    Main.java:94: error: incompatible types: Object cannot be converted to Pie
            Pie pie = pieBox.get();
                                ^
    Main.java:97: error: incompatible types: Object cannot be converted to Tart
            Tart tart = tartBox.get();
                                   ^
    3 errors
  time: Tue, 14 Dec 2021 11:14:23 UTC
record: -1
